[{"D:\\Web Development\\React Js\\authentication\\src\\index.js":"1","D:\\Web Development\\React Js\\authentication\\src\\App.js":"2","D:\\Web Development\\React Js\\authentication\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":1607445207234,"results":"4","hashOfConfig":"5"},{"size":1692,"mtime":1607495524747,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1607445207234,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"o9p334",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Development\\React Js\\authentication\\src\\index.js",[],["16","17"],"D:\\Web Development\\React Js\\authentication\\src\\App.js",["18"],"import React from \"react\";\n\nimport firebase from \"firebase\";\n\nimport \"./App.css\";\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyD90Ihtw261H3_htifsVJoyTBPyx8tiL7w\",\n  authDomain: \"authentication-firebase-2400c.firebaseapp.com\",\n});\n\nclass App extends React.Component {\n  state = { isSingedIn: false };\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccess: () => false,\n    },\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ isSingedIn: !!user });\n\n      console.log(user);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Authenticate Yourself!</h1>\n\n        {this.state.isSingedIn ? (\n          <div>\n            <h3>You are now Sign In!</h3>\n            <h1>Welcome {firebase.auth().currentUser.displayName}</h1>\n            <img\n              src={firebase.auth().currentUser.photoURL}\n              style={{ padding: \"20px\" }}\n              alt=\"display image\"\n            />\n            <br />\n            <button onClick={() => firebase.auth().signOut()}>Sign Out</button>\n          </div>\n        ) : (\n          <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\Web Development\\React Js\\authentication\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":47,"column":13,"nodeType":"25","endLine":51,"endColumn":15},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]